(()=>{var V=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var z=V((he,P)=>{P.exports=window.Tablesort});var K=z();function J(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function C(e,n){e=e||[];for(let t=0;t<e.length;t++)n(e[t])}function G(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function W(){return window.matchMedia("only screen and (max-width: 680px)").matches}function I(e,n,t,o){Array.isArray(n)||(n=[n]),e.classList.add("animate__animated",...n);let i=()=>{e.classList.remove("animate__animated",...n),e.removeEventListener("animationend",i),typeof o=="function"&&o()};t||e.addEventListener("animationend",i)}function X(){Array.from(document.querySelectorAll("[data-svg-src]")).forEach(e=>{fetch(e.getAttribute("data-svg-src")).then(n=>n.text()).then(n=>{let t=document.createElement("div");t.insertAdjacentHTML("afterbegin",n);let o=t.firstChild;o.setAttribute("data-svg-src",e.getAttribute("data-svg-src")),o.classList.add("icon");let i=o.getElementsByTagName("title");i.length&&o.removeChild(i[0]),e.parentElement.replaceChild(o,e)})})}function Y(){let e=document.getElementById("menu-toggle-mobile"),n=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),n.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),n.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function A(e){document.body.setAttribute("theme",e),document.documentElement.style.setProperty("color-scheme",e==="light"?"light":"dark"),window.localStorage&&localStorage.setItem("theme",e),window.isDark=e!=="light"}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let n=document.body.getAttribute("theme");A(n==="dark"?"black":n==="black"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let n=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===n){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?A(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?A("dark"):A("light");for(let o of window.switchThemeEventSet)o()})})}function U(){let e=window.config.search,n=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||n&&window._searchMobileOnce||!n&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,o=e.snippetLength?e.snippetLength:50,i=e.highlightTag?e.highlightTag:"em",s=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,d=e.findAllMatches?e.findAllMatches:!1,l=e.location?e.location:0,_=e.threshold?e.threshold:.3,B=e.distance?e.distance:100,b=e.ignoreLocation?e.ignoreLocation:!1,O=e.useExtendedSearch?e.useExtendedSearch:!1,N=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,m=n?"mobile":"desktop",T=document.getElementById(`header-${m}`),c=document.getElementById(`search-input-${m}`),$=document.getElementById(`search-toggle-${m}`),k=document.getElementById(`search-loading-${m}`),p=document.getElementById(`search-clear-${m}`);n?(window._searchMobileOnce=!0,c.addEventListener("focus",()=>{M("autocomplete-script","/lib/autocomplete/autocomplete.min.js",()=>{R(),c.focus()}),window.config?.search?.type==="algolia"?M("algolia-script","/lib/algoliasearch/algoliasearch-lite.umd.min.js",null):M("fuse-script","/lib/fuse/fuse.min.js",null),document.body.classList.add("blur"),T.classList.add("open"),c.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{T.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),k.style.display="none",p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),p.addEventListener("click",()=>{p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{T.classList.remove("open"),k.style.display="none",p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,$.addEventListener("click",()=>{M("autocomplete-script","/lib/autocomplete/autocomplete.min.js",()=>{R(),c.focus()}),window.config?.search?.type==="algolia"?M("algolia-script","/lib/algoliasearch/algoliasearch-lite.umd.min.js",null):M("fuse-script","/lib/fuse/fuse.min.js",null),document.body.classList.add("blur"),T.classList.add("open"),c.focus()}),p.addEventListener("click",()=>{p.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",E=>{E.ctrlKey&&E.code==="KeyK"&&(E.preventDefault(),$.click())}),window._searchDesktopOnClickMask=()=>{T.classList.remove("open"),k.style.display="none",p.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),c.addEventListener("input",()=>{c.value===""?p.style.display="none":p.style.display="inline"});let R=()=>{let E=autocomplete(`#search-input-${m}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${m}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(h,L)=>{k.style.display="inline",p.style.display="none";let f=r=>{k.style.display="none",p.style.display="inline",L(r)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(h,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${o}`],highlightPreTag:`<${i}>`,highlightPostTag:`</${i}>`}).then(({hits:r})=>{let u={};r.forEach(({uri:g,date:q,_highlightResult:{title:D},_snippetResult:{content:S}})=>{u[g]&&u[g].context.length>S.value||(u[g]={uri:g,title:D.value,date:q,context:S.value})}),f(Object.values(u).slice(0,t))}).catch(r=>{console.error(r),f([])});else if(e.type==="fuse"){let r=()=>{let u={};return window._index.search(h).forEach(({item:g,refIndex:q,matches:D})=>{let S=g.title,x=g.content;D.forEach(({indices:v,value:ue,key:F})=>{if(F==="content"){let y=0;for(let w=0;w<v.length;w++){let j=x.substring(v[w][0]+y,v[w][1]+1+y),H=`<${i}>`+j+`</${i}>`;x=x.substring(0,v[w][0]+y)+H+x.substring(v[w][1]+1+y,x.length),y+=i.length*2+5}}else if(F==="title"){let y=0;for(let w=0;w<v.length;w++){let j=S.substring(v[w][0]+y,v[w][1]+1+y),H=`<${i}>`+j+`</${i}>`;S=S.substring(0,v[w][0]+y)+H+S.substring(v[w][1]+1+y,x.length),y+=i.length*2+5}}}),u[g.uri]={uri:g.uri,title:S,date:g.date,context:x}}),Object.values(u).slice(0,t)};window._index?f(r()):fetch(e.fuseIndexURL).then(u=>u.json()).then(u=>{let g={isCaseSensitive:s,findAllMatches:d,minMatchCharLength:a,location:l,threshold:_,distance:B,ignoreLocation:b,useExtendedSearch:O,ignoreFieldNorm:N,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(u,g),f(r())}).catch(u=>{console.error(u),f([])})}},templates:{suggestion:({title:h,uri:L,date:f,context:r})=>`<div><a href=${L}><span class="suggestion-title">${h}</span></a><span class="suggestion-date">${f}</span></div><div class="suggestion-context">${r}</div>`,empty:({query:h})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${J(h)}"</span></div>`,footer:()=>{let{searchType:h,icon:L,href:f}=e.type==="algolia"?{searchType:"algolia",icon:'<i class="fab fa-algolia fa-fw"></i>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${f}" rel="noopener noreffer" target="_blank">${L} ${h}</a></div>`}}});E.on("autocomplete:selected",(h,L,f,r)=>{h.preventDefault()}),n?window._searchMobile=E:window._searchDesktop=E};function M(E,h,L){if(document.querySelector(`#${E}`)===null){let f=document.querySelector("head"),r=document.createElement("script");r.setAttribute("src",h),r.setAttribute("id",E),r.onload=L,f.appendChild(r)}}}function ee(){C(document.getElementsByClassName("details"),e=>{let n=e.getElementsByClassName("details-summary")[0];n.addEventListener("click",()=>{let t=n.nextElementSibling;e.classList.contains("open")?t.style.maxHeight=null:t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1)})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function ne(){C(document.querySelectorAll(".highlight > pre.chroma"),e=>{let n=document.createElement("div");n.className=e.className;let t=document.createElement("table");n.appendChild(t);let o=document.createElement("tbody");t.appendChild(o);let i=document.createElement("tr");o.appendChild(i);let s=document.createElement("td");i.appendChild(s),e.parentElement.replaceChild(n,e),s.appendChild(e)}),C(document.querySelectorAll(".highlight > .chroma"),e=>{let n=e.querySelectorAll("pre.chroma > code");if(n.length){let t=n[n.length-1],o=document.createElement("div");o.className="code-header "+t.className.toLowerCase();let i=document.createElement("span");i.classList.add("code-title"),i.insertAdjacentHTML("afterbegin",'<i class="arrow fas fa-chevron-right fa-fw"></i>'),i.addEventListener("click",()=>{let l=e.getElementsByClassName("table-wrapper")[0];e.classList.contains("open")?l.style.maxHeight=null:l.style.maxHeight=l.scrollHeight+"px",e.classList.toggle("open")},!1),o.appendChild(i);let s=document.createElement("span");s.insertAdjacentHTML("afterbegin",'<i class="fas fa-ellipsis-h fa-fw"></i>'),s.classList.add("ellipses"),s.addEventListener("click",()=>{e.classList.add("open")},!1),o.appendChild(s);let a=document.createElement("span");a.insertAdjacentHTML("afterbegin",'<i class="far fa-copy fa-fw"></i>'),a.classList.add("copy");let d=t.innerText;(window.config.code.maxShownLines<0||d.split(`
`).length<window.config.code.maxShownLines+2)&&e.classList.add("open"),window.config.code.copyTitle&&(a.setAttribute("data-clipboard-text",d),a.title=window.config.code.copyTitle,new ClipboardJS(a).on("success",_=>{I(t,"animate__flash"),a.firstElementChild.className="fas fa-check fa-fw",setTimeout(()=>{a.firstElementChild.className="far fa-copy fa-fw"},3e3)}),o.appendChild(a)),e.insertBefore(o,e.firstChild)}})}function oe(){C(document.querySelectorAll(".content table"),e=>{let n=document.createElement("div");n.className="table-wrapper",e.parentElement.replaceChild(n,e),n.appendChild(e),window.config?.table?.sort&&new K(e)})}function ie(){let e=document.getElementById("TableOfContents");if(e===null)return;let n=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||n)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),o=e.querySelectorAll("a:first-child"),i=e.getElementsByTagName("li"),s=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",d=document.getElementById("header-desktop").offsetHeight,l=20+(a?d:0),_=t.offsetTop,B=_-l+(a?0:d);window._tocOnScroll=window._tocOnScroll||(()=>{let O=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,N=O-l+(a?0:d);if(window.newScrollTop<B?(t.style.position="absolute",t.style.top=`${_}px`):window.newScrollTop>N?(t.style.position="absolute",t.style.top=`${O}px`):(t.style.position="fixed",t.style.top=`${l}px`),o.length===0)return;let m=-1,T=l+window.newScrollTop;if(s[s.length-1].offsetTop<T)m=s.length-1;else for(let c=0;c<s.length-1;c++){let $=s[c].offsetTop,k=s[c+1].offsetTop;if($<=T&&k>T){m=c;break}}if(Array.from(o).forEach(c=>c.classList.remove("active")),Array.from(i).forEach(c=>c.classList.remove("has-active")),m>=0&&m<o.length){o[m].classList.add("active");let c=o[m].parentElement;for(;c!==e;)c.classList.add("has-active"),c=c.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],C(document.getElementsByClassName("mapbox"),e=>{let{lng:n,lat:t,zoom:o,lightStyle:i,darkStyle:s,marked:a,navigation:d,geolocate:l,scale:_,fullscreen:B}=window.config.data[e.id],b=new mapboxgl.Map({container:e,center:[n,t],zoom:o,minZoom:.2,style:window.isDark?s:i,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([n,t]).addTo(b),d&&b.addControl(new mapboxgl.NavigationControl,"bottom-right"),l&&b.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),_&&b.addControl(new mapboxgl.ScaleControl),B&&b.addControl(new mapboxgl.FullscreenControl),b.addControl(new MapboxLanguage),window._mapboxArr.push(b)}),window._mapboxOnSwitchTheme=()=>{C(window._mapboxArr,e=>{let n=e.getContainer(),{lightStyle:t,darkStyle:o}=window.config.data[n.id];e.setStyle(window.isDark?o:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ae(){if(window.config.typeit){let e=window.config.typeit,n=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,o=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(i=>{let s=a=>{let d=i[a];if(!document.getElementById(d).hasAttribute("data-typeit-id")){let l=new TypeIt(`#${d}`,{strings:window.config.data[d],speed:n,lifeLike:!0,cursorSpeed:t,cursorChar:o,waitUntilVisible:!0,afterComplete:()=>{if(a===i.length-1){e.duration>=0&&window.setTimeout(()=>{l.destroy()},e.duration);return}l.destroy(),s(a+1)}}).go()}};s(0)})}}function le(){function e(o){let i=document.getElementsByTagName("meta");for(let s=0;s<i.length;s++)if(i[s].getAttribute("name")===o)return i[s]}let n=e("theme-color"),t={light:"#f8f8f8",dark:"#252627",black:"#000000"};window._metaThemeColorOnSwitchTheme=()=>{n.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=[],n=document.getElementById("view-comments");document.body.getAttribute("header-desktop")==="auto"&&e.push(document.getElementById("header-desktop")),document.body.getAttribute("header-mobile")==="auto"&&e.push(document.getElementById("header-mobile")),document.getElementById("comments")?(n.href="#comments",n.style.display="block"):n.style.display="null";let t=document.getElementById("fixed-buttons"),o=20,i=100;function s(){window.newScrollTop=G();let a=window.newScrollTop-window.oldScrollTop,d=W();C(e,l=>{a>o?(l.classList.remove("animate__fadeInDown"),I(l,["animate__fadeOutUp","animate__faster"],!0)):(a<-o||window.newScrollTop<=20)&&(l.classList.remove("animate__fadeOutUp"),I(l,["animate__fadeInDown","animate__faster"],!0))}),window.newScrollTop>i?d&&a>o?(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)):(!d||a<-o)&&(t.style.display="block",t.classList.remove("animate__fadeOut"),I(t,["animate__fadeIn","animate__faster"],!0)):(d||(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)),t.style.display="none");for(let l of window.scrollEventSet)l();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",s,!1)}function de(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();U()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function me(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=G(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),X(),Y(),Z(),Q(),le(),U(),ee(),te(),ne(),oe(),ae(),se(),ie(),ce(),de(),re()}me();})();
//# sourceMappingURL=data:application/json;base64,
